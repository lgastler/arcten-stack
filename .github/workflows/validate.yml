name: ðŸš€ Validation Pipeline
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  actions: write
  contents: read
  pull-requests: write
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "lgastler/arcten-base-stack"
jobs:
  lint:
    name: â¬£ Biome lint
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v4
     - uses: biomejs/setup-biome@v2
     - run: biome ci . --reporter=github

  typecheck:
    needs: lint
    name: ðŸ”Ž Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm run typecheck

  vitest:
    needs: typecheck
    name: âš¡ Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm exec playwright install chromium --with-deps
      - run: pnpm run test:cov
      - name: "Report Coverage"
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2

  build:
    needs: [lint, typecheck, vitest]
    name: ðŸ“¦ Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image and push to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
